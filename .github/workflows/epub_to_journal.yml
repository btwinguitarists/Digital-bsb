name: EPUB to Journaling PDF (keep links)

on:
  workflow_dispatch:
    inputs:
      epub_path:
        description: "Path to EPUB in repo (e.g., 'bsb 2.epub')"
        required: true
        default: "bsb 2.epub"
      right_margin_in:
        description: "Right journaling margin (inches)"
        required: true
        default: "3.0"
      paper_size:
        description: "letter or a4"
        required: true
        default: "letter"
      base_font_pt:
        description: "Base font size (pt)"
        required: true
        default: "11"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RIGHT_MARGIN_IN: ${{ inputs.right_margin_in }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Calibre (ebook-convert)
        run: |
          sudo -v
          curl -L https://download.calibre-ebook.com/linux-installer.py | sudo -E python3 -

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Python deps
        run: pip install --quiet pymupdf

      - name: Copy & validate EPUB
        shell: bash
        run: |
          mkdir -p work
          cp "${{ inputs.epub_path }}" "work/book.epub"
          python3 - <<'PY'
import sys, zipfile
p = "work/book.epub"
try:
    zipfile.ZipFile(p).testzip()
    print("EPUB OK:", p)
except Exception as e:
    print("ERROR:", e); sys.exit(1)
PY

      - name: Convert EPUB to PDF (preserve links/TOC)
        shell: bash
        run: |
          ebook-convert "work/book.epub" "work/base.pdf" \
            --paper-size "${{ inputs.paper_size }}" \
            --margin-left 54 --margin-right 54 --margin-top 54 --margin-bottom 54 \
            --pdf-use-document-metadata --embed-all-fonts --pdf-add-toc \
            --base-font-size "${{ inputs.base_font_pt }}"
          ls -lh work/base.pdf

      - name: Add journaling gutter (keep links)
        shell: bash
        run: |
          python3 - <<'PY'
import os, fitz
in_pdf = "work/base.pdf"
out_pdf = "work/journaling.pdf"
right_in = float(os.getenv("RIGHT_MARGIN_IN","3.0"))
margin = int(right_in * 72)
doc = fitz.open(in_pdf)
for p in doc:
    r = p.rect
    x = r.x1 - margin
    p.draw_line(fitz.Point(x, r.y0+12), fitz.Point(x, r.y1-12), color=(0,0,0), width=0.5)
    p.insert_text(fitz.Point(r.x0+18, r.y0+22), "Home", fontsize=8, color=(0.3,0.3,0.3))
    p.insert_link({"kind": fitz.LINK_GOTO, "from": fitz.Rect(r.x0+12, r.y0+10, r.x0+75, r.y0+28), "page": 0})
doc.save(out_pdf)
print("Wrote", out_pdf)
PY
          ls -lh work/journaling.pdf

      - name: Upload finished PDF
        uses: actions/upload-artifact@v4
        with:
          name: journaling-pdf
          path: work/journaling.pdf
          if-no-files-found: error
