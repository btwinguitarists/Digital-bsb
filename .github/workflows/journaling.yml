name: EPUB or PDF to Journaling PDF (keep links)

on:
  workflow_dispatch:
    inputs:
      input_type:
        description: "epub or pdf"
        required: true
        default: "epub"
      url:
        description: "Direct URL to an EPUB or a PDF"
        required: true
      right_margin_in:
        description: "Right journal margin (inches)"
        required: true
        default: "3.0"
      orientation:
        description: "portrait or landscape (landscape rotates pages so margin appears at right)"
        required: true
        default: "landscape"
      paper_size:
        description: "letter or a4 (EPUB only)"
        required: true
        default: "letter"
      base_font_pt:
        description: "Base font size in points (EPUB only)"
        required: false
        default: "11"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Python deps
        run: pip install --quiet pymupdf

      - name: Install Calibre (only for EPUB input)
        if: ${{ inputs.input_type == 'epub' }}
        run: |
          curl -L https://download.calibre-ebook.com/linux-installer.py | sudo -E python3 -

      - name: Download input file
        run: |
          mkdir -p work
          curl -L "${{ inputs.url }}" -o work/input.bin

      - name: Build base.pdf
        run: |
          set -e
          if [ "${{ inputs.input_type }}" = "epub" ]; then
            mv work/input.bin work/book.epub
            ebook-convert work/book.epub work/base.pdf \
              --paper-size "${{ inputs.paper_size }}" \
              --margin-left 54 --margin-top 54 \
              --margin-right 54 --margin-bottom 54 \
              --pdf-use-document-metadata \
              --embed-all-fonts \
              --pdf-add-toc \
              --base-font-size "${{ inputs.base_font_pt }}"
          else
            mv work/input.bin work/base.pdf
          fi
          ls -lh work/base.pdf

      - name: Add journaling gutter and Home hotspot
        env:
          RIGHT_MARGIN_IN: ${{ inputs.right_margin_in }}
          ORIENTATION: ${{ inputs.orientation }}
        run: |
          python3 scripts/add_journal.py

      - name: Upload finished PDF
        uses: actions/upload-artifact@v4
        with:
          name: journaling-pdf
          path: work/journaling.pdf
          if-no-files-found: error
